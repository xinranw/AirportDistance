// Generated by CoffeeScript 1.6.3
var ViewController;

ViewController = (function() {
  var data, keys;

  function ViewController() {}

  data = {};

  keys = [];

  ViewController.prototype.loadData = function(file_location, fun) {
    var _this = this;
    if (file_location == null) {
      console.log('no file location specified');
      return;
    }
    return $.getJSON(file_location, function(data) {
      console.log('success');
      _this.data = data;
      _this.keys = Object.keys(data);
      if (fun == null) {
        console.log('no callback function specified');
        return;
      }
      return fun();
    }).error(function() {
      return console.log('error');
    });
  };

  ViewController.updateDistance = function(dom_elem, value) {
    return dom_elem.text(value);
  };

  ViewController.prototype.getInputValue = function(dom_elem) {
    return $(dom_elem).val();
  };

  ViewController.prototype.setTripCoords = function(origin, destination, trip_model) {
    trip_model.setOriginCoords(origin);
    return trip_model.setDestinationCoords(destination);
  };

  ViewController.prototype.getCoords = function(code) {
    var coords;
    coords = [];
    coords[0] = this.data[code]["latitude"];
    coords[1] = this.data[code]["longitude"];
    return coords;
  };

  ViewController.prototype.getData = function() {
    return this.data;
  };

  ViewController.prototype.setData = function(json) {
    return this.data = $.extend(true, {}, json);
  };

  ViewController.prototype.getKeys = function() {
    return this.keys;
  };

  ViewController.prototype.initializeMap = function(coords1, coords2, dom_elem) {
    var directionsDisplay, directionsRequest, directionsService, map, mapOptions;
    directionsService = new google.maps.DirectionsService();
    directionsDisplay = new google.maps.DirectionsRenderer();
    directionsRequest = {
      origin: new google.maps.LatLng(coords1[0], coords1[1]),
      destination: new google.maps.LatLng(coords2[0], coords2[1]),
      travelMode: google.maps.TravelMode.DRIVING
    };
    mapOptions = {
      center: new google.maps.LatLng((coords1[0] + coords2[0]) / 2, (coords1[1] + coords2[1]) / 2),
      zoom: 8,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    map = new google.maps.Map(dom_elem[0], mapOptions);
    directionsDisplay.setMap(map);
    return directionsService.route(directionsRequest, function(result, status) {
      if (status === google.maps.DirectionsStatus.OK) {
        return directionsDisplay.setDirections(result);
      }
    });
  };

  return ViewController;

})();

this.ViewController = ViewController;
